
@{
    ViewBag.Title = "Trừ tiền tài khoản bắn cá người chơi";
}

@using TraditionGame.Utilities.Utils;
@model MsWebGame.CSKH.Models.Param.ParsTransfer

@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">Trừ tiền tài khoản bắn cá người chơi</div>
    </div>
    <div class="t-widget t-tabstrip t-header">
        <div class="t-content t-state-active" style="display: block;">
            <table class="adminContent customer-info-tab">
                <tr>
                    <td class="adminTitle"></td>
                    <td class="adminData">
                        <span id="txttransferMsg" class="@(ViewBag.Message == "Trừ tiền thành công" ? "txttransferMsgSuccess" : "txttransferMsg")">@ViewBag.Message</span>
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        <label>Số dư</label>
                    </td>
                    <td class="adminData" id="wallet">
                        <span class="balancetransfer">@MoneyExtension.LongToMoneyFormat(Model.balance)</span>
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        <img src="~/Content/images/ico-help.gif">
                        <label>Chọn cổng</label>
                    </td>
                    <td class="adminData">
                        @Html.DropDownList("ServiceID", new SelectList(ViewBag.ServiceBox, "Value", "Text", Model.ServiceID), new { @class = "text-box single-line" })
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        <label>Nickname nhận <span style="color:red;">*</span></label>
                    </td>
                    <td class="adminData">
                        <input class="text-box single-line" id="receiverName" name="receiverName" value="@Model.receiverName" type="text"
                               onblur="GlobalHeader.validateUserTransfer(1);">
                        <span class="field-validation-valid" data-valmsg-for="receiverName"></span>
                    </td>
                </tr>
                <tr>
                    <td class="adminTitle">
                        <label>Số tiền nhận <span style="color:red;">*</span></label>
                    </td>
                    <td class="adminData">
                        <input class="text-box single-line" id="amount" name="amount" type="text" value="@Model.amount" onkeypress="return GlobalHeader.isNumber(event);"
                               onkeyup="GlobalHeader.changeNumber(this)" onblur="GlobalHeader.changeNumber(this);">
                        <span class="field-validation-valid" data-valmsg-for="amount"></span>
                    </td>
                </tr>
 
                <tr>
                    <td class="adminTitle"></td>
                    <td class="adminData">
                        <button id="BtnStart" class="t-button">Trừ Xèng Fish</button>
                    </td>
                </tr>
            </table>
        </div>
    </div>
    @*<script type="text/javascript">
        var btnStart = document.getElementById("BtnStart");
        btnStart.addEventListener("click", function (e) {
            e.preventDefault();
            var wsUri = "wss://fish.x6.club:2053/";
            var socket = new WebSocket(wsUri);
            socket.onopen = e => {
                console.log("socket opened", e);
            };

            socket.onclose = function (e) {
                console.log("socket closed", e);
            };
            var index = 0;
            socket.onmessage = function (e) {
                index++;
                var result = "";
                for (var i = 0; i < e.data.length; i++) {
                    result += String.fromCharCode(parseInt(e.data[i], 2));
                }
                console.log("index: " + index);
                console.log(result);
                console.log(e);
                if (index === 1) {
                    myObj = {
                        "msgId": 30,
                        "route": "cskh_shootfish_cash",
                        "nickname": $('#receiverName').val().trim().toLowerCase(),
                        "amount": "-"+$('#amount').val().trim()
                    }
                    var str = JSON.stringify(myObj);
                    console.log(str);
                    var Base64 = { _keyStr: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", encode: function (e) { var t = ""; var n, r, i, s, o, u, a; var f = 0; e = Base64._utf8_encode(e); while (f < e.length) { n = e.charCodeAt(f++); r = e.charCodeAt(f++); i = e.charCodeAt(f++); s = n >> 2; o = (n & 3) << 4 | r >> 4; u = (r & 15) << 2 | i >> 6; a = i & 63; if (isNaN(r)) { u = a = 64 } else if (isNaN(i)) { a = 64 } t = t + this._keyStr.charAt(s) + this._keyStr.charAt(o) + this._keyStr.charAt(u) + this._keyStr.charAt(a) } return t }, decode: function (e) { var t = ""; var n, r, i; var s, o, u, a; var f = 0; e = e.replace(/[^A-Za-z0-9\+\/\=]/g, ""); while (f < e.length) { s = this._keyStr.indexOf(e.charAt(f++)); o = this._keyStr.indexOf(e.charAt(f++)); u = this._keyStr.indexOf(e.charAt(f++)); a = this._keyStr.indexOf(e.charAt(f++)); n = s << 2 | o >> 4; r = (o & 15) << 4 | u >> 2; i = (u & 3) << 6 | a; t = t + String.fromCharCode(n); if (u != 64) { t = t + String.fromCharCode(r) } if (a != 64) { t = t + String.fromCharCode(i) } } t = Base64._utf8_decode(t); return t }, _utf8_encode: function (e) { e = e.replace(/\r\n/g, "\n"); var t = ""; for (var n = 0; n < e.length; n++) { var r = e.charCodeAt(n); if (r < 128) { t += String.fromCharCode(r) } else if (r > 127 && r < 2048) { t += String.fromCharCode(r >> 6 | 192); t += String.fromCharCode(r & 63 | 128) } else { t += String.fromCharCode(r >> 12 | 224); t += String.fromCharCode(r >> 6 & 63 | 128); t += String.fromCharCode(r & 63 | 128) } } return t }, _utf8_decode: function (e) { var t = ""; var n = 0; var r = c1 = c2 = 0; while (n < e.length) { r = e.charCodeAt(n); if (r < 128) { t += String.fromCharCode(r); n++ } else if (r > 191 && r < 224) { c2 = e.charCodeAt(n + 1); t += String.fromCharCode((r & 31) << 6 | c2 & 63); n += 2 } else { c2 = e.charCodeAt(n + 1); c3 = e.charCodeAt(n + 2); t += String.fromCharCode((r & 15) << 12 | (c2 & 63) << 6 | c3 & 63); n += 3 } } return t } }
                    // Encode the String
                    var encodedString = Base64.encode(str);
                    console.log(encodedString); // Outputs: "SGVsbG8gV29ybGQh"
                    socket.send(encodedString);
                } else {
                    socket.close();
                }

            };

            socket.onerror = function (e) {
                console.error(e.data);
            };
        });
    </script>*@
    <script type="text/javascript">
        $(document).ready(function () {
            setTimeout(function () {
                $('#txttransferMsg').html('');
            }, 4000);
        });
    </script>
}