@{
    ViewBag.Title = "Danh sách mail hệ thống";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using MsWebGame.CSKH.Models.Mails
@using Telerik.Web.Mvc.UI
@using MsWebGame.CSKH.Utils
@model MailListModel
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Content/images/ico-configuration.png")" alt="" />
            Danh sách mail người dùng
        </div>
        <div class="options">
            <a href="@Url.Action("Create")" class="t-button">@AppConstants.CONFIG.ADD_NEW</a>
        </div>
    </div>
    <table style="width: 100%;">
        <tbody>
            <tr>
                <td class="adminTitle">
                    <img alt="A billing email address." src="~/Content/images/ico-help.gif">
                    @Html.LabelFor(m => m.UserName)
                </td>
                <td class="adminData">
                    @Html.TextBoxFor(m => m.UserName, new { @class = "text-box single-line" })
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    <img alt="A billing email address." src="~/Content/images/ico-help.gif">
                    @Html.LabelFor(m => m.FromDate)
                </td>
                <td class="adminData">
                    @Html.EditorFor(m => m.FromDate, new { @class = "text-box single-line", type = "datetime" })
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    <img alt="A billing email address." src="~/Content/images/ico-help.gif">
                    @Html.LabelFor(m => m.ToDate)
                </td>
                <td class="adminData">
                    @Html.EditorFor(m => m.ToDate, new { @class = "text-box single-line", type = "datetime" })
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    <img src="~/Content/images/ico-help.gif">
                    <label>Chọn cổng</label>
                </td>
                <td class="adminData">
                    @Html.DropDownList("serviceId", new SelectList(ViewBag.ServiceBox, "Value", "Text"), new { @class = "text-box single-line" })
                </td>
            </tr>
            <tr>
                <td class="adminTitle">
                    &nbsp;
                </td>
                <td>
                    <input type="button" id="btnSearch" class="t-button" value="@AppConstants.CONFIG.SEARCH" style="margin-bottom: 6px;">
                </td>
            </tr>
        </tbody>
    </table>

    <h2>
        Danh sách
    </h2>

    <table class="adminContent">
        <tr>
            <td>
                @(Html.Telerik().Grid<MailModel>()
                    .Name("settings-grid")
                    .DataKeys(x => { x.Add(y => y.ID); })
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.RecevierUserName);
                        columns.Bound(x => x.Title);
                        columns.Bound(x => x.Content);
                        columns.Bound(x => x.CreatedTime);
                        columns.Bound(x => x.ID)
                        .Width(100)
                        .Template(x => Html.ActionLink("Edit", "Mail", new { id = x.ID }))
                        .ClientTemplate("<a href=\"Edit/<#= ID #>\">" + AppConstants.CONFIG.EDIT + "</a>")
                        .Title("").HtmlAttributes(new { @class = "text-center" });
                    })
                    .Pageable(settings => settings.PageSize(AppConstants.CONFIG.GRID_SIZE).Position(GridPagerPosition.Both))
                    .DataBinding(dataBinding =>
                    {
                        dataBinding.Ajax().Select("GetList", "Mail");
                    })
                    .ClientEvents(x => x.OnError("grid_onError").OnEdit("grid_onEdit").OnDataBinding("onDataBinding"))
                    .EnableCustomBinding(true))

                <script type="text/javascript">
                    function grid_onError(e) {
                        alert(e.XMLHttpRequest.responseText);
                        e.preventDefault();
                    }

                    function grid_onEdit(e) {

                    }

                    function onDataBinding(e) {
                        var searchModel = {
                            UserName: $('#@Html.IdFor(model => model.UserName)').val().trim(),
                            ToDate: $('#@Html.IdFor(model => model.ToDate)').val().trim(),
                            FromDate: $('#@Html.IdFor(model => model.FromDate)').val().trim(),
                            ServiceID: $('#serviceId').val().trim()
                        }
                        e.data = searchModel
                    }

                    $(document).ready(function () {
                        $('#btnSearch').click(function () {
                            var grid = $('#settings-grid').data('tGrid');
                            grid.currentPage = 1; //new search. Set page size to 1
                            grid.ajaxRequest();
                            return false;
                        });
                    });
                </script>
            </td>
        </tr>
    </table>
}



